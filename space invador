import turtle
import random
# window set up

ms = turtle.Screen()
ms.bgcolor('black')
ms.title("Space invader")
ms.bgpic('game.png')

ms.addshape('spaceship.gif')
ms.addshape('alien.gif')
ms.addshape('bullet.gif')
# draw border

border_pen = turtle.Turtle()
border_pen.speed(0)
border_pen.color("white")
border_pen.penup()
border_pen.setposition(-300, -300)
border_pen.pendown()
border_pen.pensize(3)
for side in range(4):
    border_pen.fd(600)
    border_pen.lt(90)
border_pen.hideturtle()

# set the score
score = 0

score_pen = turtle.Turtle()
score_pen.speed(0)
score_pen.color("white")
score_pen.penup()
score_pen.setposition(-290, 270)
scorestring = "Score: %s" % score
score_pen.write(scorestring, False, align='left', font=("Arial", 14, "normal"))
score_pen.hideturtle()

# player
player = turtle.Turtle()
player.color('blue')
player.shape('spaceship.gif')
player.penup()
player.speed(0)
player.setposition(0, -250)
player.setheading(90)

player_speed = 15

enemynumber = 9
enemies = []
for i in range(enemynumber):
    enemies.append(turtle.Turtle())
# creating enemy
for enemy in enemies:
    enemy.color('red')
    enemy.shape('alien.gif')
    enemy.penup()
    enemy.tilt(180)
    enemy.speed(0)
    x = random.randint(-200, 200)
    y = random.randint(100, 250)
    enemy.setposition(x, y)
    enemy.setheading(90)

enemy_speed = 3

# creating players bullet

bullet = turtle.Turtle()
bullet.color('yellow')
bullet.shape('bullet.gif')
bullet.penup()
bullet.speed(0)
bullet.setheading(90)
bullet.shapesize(0.5, 0.5)
bullet.setposition(0, -800)
bullet.hideturtle()

bullet_speed = 30

# declaring bullet state

bullet_state = "ready"


# create players move


def move_left():
    x = player.xcor()

    x -= player_speed
    if x < -280:
        x = -280
    player.setx(x)


def move_right():
    x = player.xcor()
    x += player_speed
    if x > 280:
        x = 280
    player.setx(x)


def fire_bullet():
    global bullet_state
    if bullet_state == "ready":

        bullet_state = "fire"
        x = player.xcor()
        y = player.ycor() + 10
        bullet.setposition(x, y)
        bullet.showturtle()


def iscollision(t1, t2):
    distance = t1.distance(t2)
    if distance < 15:
        print(distance)
        return True
    else:
        return False
# key bindings


ms.listen()
ms.onkey(move_left, "Left")
ms.onkey(move_right, "Right")
ms.onkey(fire_bullet, 'space')

# game loop
while True:
    for enemy in enemies:
        x = enemy.xcor()
        x -= enemy_speed
        enemy.setx(x)

        if enemy.xcor() < -280:
            for e in enemies:
                y = e.ycor()

                y -= 40

                e.sety(y)
                enemy_speed *= -1

        if enemy.xcor() > 280:
            for e in enemies:
                y = e.ycor()
                y -= 40
                e.sety(y)
                enemy_speed *= -1

        if iscollision(bullet, enemy):
            bullet.hideturtle()
            bullet_state = 'ready'
            bullet.setposition(0, -800)
            x = random.randint(-200, 200)
            y = random.randint(100, 250)
            enemy.setposition(x, y)
            # update score
            score += 10
            scorestring = "Score: %s" % score
            score_pen.clear()
            score_pen.write(scorestring, False, align='left', font=("Arial", 14, "normal"))

        if iscollision(player, enemy):
            player.hideturtle()
            enemy.hideturtle()
            print("game over")
            break

    # move bullet
    y = bullet.ycor()
    y += bullet_speed
    bullet.sety(y)

    if bullet.ycor() > 275:
        bullet.hideturtle()
        bullet_state = 'ready'
